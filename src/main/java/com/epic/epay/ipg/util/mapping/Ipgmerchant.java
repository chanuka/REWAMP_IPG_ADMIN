package com.epic.epay.ipg.util.mapping;
// Generated Oct 24, 2013 11:34:32 AM by Hibernate Tools 3.2.1.GA

import java.sql.Blob;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Ipgmerchant generated by hbm2java
 */
@Entity
@Table(name = "IPGMERCHANT" )
public class Ipgmerchant implements java.io.Serializable {

    private String merchantid;
    private Ipgriskprofile ipgriskprofile;
    private Ipgcountry ipgcountry;
    private Ipgheadmerchant ipgheadmerchant;
    private Ipgstatus ipgstatus;
    private Ipgstatus ipgstatusByAuthenticationrequied;
    private Ipgaddress ipgaddress;
    private String merchantname;
    private String primaryurl;
    private String secondaryurl;
    private Date dateofregistry;
    private Date dateofexpiry;
    private String contactperson;
    private String remarks;
//    private String countrycode;
    private Blob privatekey;
    private Blob publickey;
//    private String authenticationrequied;
    private String field1;
    private String field2;
    private String lastupdateduser;
    private Date lastupdatedtime;
    private Date createdtime;
    private Blob symetrickey;
    private String securitymechanism;
    private String directoryserver;
    private String dinamicreturnsuccessurl;
    private String dinamicreturnerrorurl;
    private String iscarddetailsonmerchantlevel;
    private String isdefaultmerchany;
    private Set<Ipgmerchantservicecharge> ipgmerchantservicecharges = new HashSet<Ipgmerchantservicecharge>(0);
    private Set<Ipgmerchnatterminal> ipgmerchnatterminals = new HashSet<Ipgmerchnatterminal>(0);
    private Set<Ipgmerchantcredential> ipgmerchantcredentials = new HashSet<Ipgmerchantcredential>(0);
    private Set<Ipgmerchantcurrency> ipgmerchantcurrencies = new HashSet<Ipgmerchantcurrency>(0);
    private Set<Ipgmerchantaddon> ipgmerchantaddons = new HashSet<Ipgmerchantaddon>(0);
    private Set<Epictxnrequests> epictxnrequestses = new HashSet<Epictxnrequests>(0);
    private Set<Ipgtransaction> ipgtransactions = new HashSet<Ipgtransaction>(0);

    public Ipgmerchant() {
    }

    public Ipgmerchant(String merchantid, Ipgaddress ipgaddress, String merchantname, String primaryurl) {
        this.merchantid = merchantid;
        this.ipgaddress = ipgaddress;
        this.merchantname = merchantname;
        this.primaryurl = primaryurl;
    }

    public Ipgmerchant(String merchantid, Set<Ipgmerchantaddon> ipgmerchantaddons, Ipgstatus ipgstatusByAuthenticationrequied, Ipgcountry ipgcountry, Ipgriskprofile ipgriskprofile, Set<Ipgmerchantcurrency> ipgmerchantcurrencies, Set<Ipgmerchantservicecharge> ipgmerchantservicecharges, Ipgheadmerchant ipgheadmerchant, Ipgstatus ipgstatus, Ipgaddress ipgaddress, String merchantname, String primaryurl, String secondaryurl, Date dateofregistry, Date dateofexpiry, String contactperson, String remarks, Blob privatekey, Blob publickey, String field1, String field2, String lastupdateduser, Date lastupdatedtime, Date createdtime, Blob symetrickey, String securitymechanism, String directoryserver, String dinamicreturnsuccessurl, String dinamicreturnerrorurl, String iscarddetailsonmerchantlevel, Set<Ipgmerchnatterminal> ipgmerchnatterminals, Set<Ipgmerchantcredential> ipgmerchantcredentials, Set<Epictxnrequests> epictxnrequestses, Set<Ipgtransaction> ipgtransactions) {
        this.merchantid = merchantid;
        this.ipgriskprofile = ipgriskprofile;
        this.ipgcountry = ipgcountry;
        this.ipgheadmerchant = ipgheadmerchant;
        this.ipgstatus = ipgstatus;
        this.ipgaddress = ipgaddress;
        this.merchantname = merchantname;
        this.primaryurl = primaryurl;
        this.secondaryurl = secondaryurl;
        this.dateofregistry = dateofregistry;
        this.dateofexpiry = dateofexpiry;
        this.contactperson = contactperson;
        this.remarks = remarks;
//        this.countrycode = countrycode;
        this.privatekey = privatekey;
        this.publickey = publickey;
//        this.authenticationrequied = authenticationrequied;
        this.field1 = field1;
        this.field2 = field2;
        this.lastupdateduser = lastupdateduser;
        this.lastupdatedtime = lastupdatedtime;
        this.createdtime = createdtime;
        this.symetrickey = symetrickey;
        this.securitymechanism = securitymechanism;
        this.directoryserver = directoryserver;
        this.dinamicreturnsuccessurl = dinamicreturnsuccessurl;
        this.dinamicreturnerrorurl = dinamicreturnerrorurl;
        this.iscarddetailsonmerchantlevel = iscarddetailsonmerchantlevel;
        this.ipgmerchnatterminals = ipgmerchnatterminals;
        this.ipgmerchantservicecharges = ipgmerchantservicecharges;
        this.ipgmerchantcredentials = ipgmerchantcredentials;
        this.ipgmerchantcurrencies = ipgmerchantcurrencies;
        this.ipgstatusByAuthenticationrequied = ipgstatusByAuthenticationrequied;
        this.ipgmerchantaddons = ipgmerchantaddons;
        this.epictxnrequestses = epictxnrequestses;
        this.ipgtransactions = ipgtransactions;
    }

    @Id
    @Column(name = "MERCHANTID", unique = true, nullable = false, length = 15)
    public String getMerchantid() {
        return this.merchantid;
    }

    public void setMerchantid(String merchantid) {
        this.merchantid = merchantid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "RISKPROFILECODE")
    public Ipgriskprofile getIpgriskprofile() {
        return this.ipgriskprofile;
    }

    public void setIpgriskprofile(Ipgriskprofile ipgriskprofile) {
        this.ipgriskprofile = ipgriskprofile;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MERCHANTCUSTOMERID")
    public Ipgheadmerchant getIpgheadmerchant() {
        return this.ipgheadmerchant;
    }

    public void setIpgheadmerchant(Ipgheadmerchant ipgheadmerchant) {
        this.ipgheadmerchant = ipgheadmerchant;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "STATUSCODE")
    public Ipgstatus getIpgstatus() {
        return this.ipgstatus;
    }

    public void setIpgstatus(Ipgstatus ipgstatus) {
        this.ipgstatus = ipgstatus;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ADDRESSID", nullable = false)
    public Ipgaddress getIpgaddress() {
        return this.ipgaddress;
    }

    public void setIpgaddress(Ipgaddress ipgaddress) {
        this.ipgaddress = ipgaddress;
    }

    @Column(name = "MERCHANTNAME", nullable = false)
    public String getMerchantname() {
        return this.merchantname;
    }

    public void setMerchantname(String merchantname) {
        this.merchantname = merchantname;
    }

    @Column(name = "PRIMARYURL", nullable = false)
    public String getPrimaryurl() {
        return this.primaryurl;
    }

    public void setPrimaryurl(String primaryurl) {
        this.primaryurl = primaryurl;
    }

    @Column(name = "SECONDARYURL")
    public String getSecondaryurl() {
        return this.secondaryurl;
    }

    public void setSecondaryurl(String secondaryurl) {
        this.secondaryurl = secondaryurl;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DATEOFREGISTRY", length = 7)
    public Date getDateofregistry() {
        return this.dateofregistry;
    }

    public void setDateofregistry(Date dateofregistry) {
        this.dateofregistry = dateofregistry;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DATEOFEXPIRY", length = 7)
    public Date getDateofexpiry() {
        return this.dateofexpiry;
    }

    public void setDateofexpiry(Date dateofexpiry) {
        this.dateofexpiry = dateofexpiry;
    }

    @Column(name = "CONTACTPERSON")
    public String getContactperson() {
        return this.contactperson;
    }

    public void setContactperson(String contactperson) {
        this.contactperson = contactperson;
    }

    @Column(name = "REMARKS")
    public String getRemarks() {
        return this.remarks;
    }

    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

//    @Column(name = "COUNTRYCODE", length = 16)
//    public String getCountrycode() {
//        return this.countrycode;
//    }
//
//    public void setCountrycode(String countrycode) {
//        this.countrycode = countrycode;
//    }
    @Column(name = "PRIVATEKEY")
    public Blob getPrivatekey() {
        return this.privatekey;
    }

    public void setPrivatekey(Blob privatekey) {
        this.privatekey = privatekey;
    }

    @Column(name = "PUBLICKEY")
    public Blob getPublickey() {
        return this.publickey;
    }

    public void setPublickey(Blob publickey) {
        this.publickey = publickey;
    }

//    @Column(name = "AUTHENTICATIONREQUIED", length = 16)
//    public String getAuthenticationrequied() {
//        return this.authenticationrequied;
//    }
//
//    public void setAuthenticationrequied(String authenticationrequied) {
//        this.authenticationrequied = authenticationrequied;
//    }
    @Column(name = "FIELD1")
    public String getField1() {
        return this.field1;
    }

    public void setField1(String field1) {
        this.field1 = field1;
    }

    @Column(name = "FIELD2")
    public String getField2() {
        return this.field2;
    }

    public void setField2(String field2) {
        this.field2 = field2;
    }

    @Column(name = "LASTUPDATEDUSER", length = 64)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }

    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "LASTUPDATEDTIME", length = 7)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }

    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATEDTIME", length = 7)
    public Date getCreatedtime() {
        return this.createdtime;
    }

    public void setCreatedtime(Date createdtime) {
        this.createdtime = createdtime;
    }

    @Column(name = "SYMETRICKEY")
    public Blob getSymetrickey() {
        return this.symetrickey;
    }

    public void setSymetrickey(Blob symetrickey) {
        this.symetrickey = symetrickey;
    }

    @Column(name = "SECURITYMECHANISM", length = 64)
    public String getSecuritymechanism() {
        return this.securitymechanism;
    }

    public void setSecuritymechanism(String securitymechanism) {
        this.securitymechanism = securitymechanism;
    }

    @Column(name = "DIRECTORYSERVER", length = 16)
    public String getDirectoryserver() {
        return this.directoryserver;
    }

    public void setDirectoryserver(String directoryserver) {
        this.directoryserver = directoryserver;
    }

    @Column(name = "DINAMICRETURNSUCCESSURL")
    public String getDinamicreturnsuccessurl() {
        return this.dinamicreturnsuccessurl;
    }

    public void setDinamicreturnsuccessurl(String dinamicreturnsuccessurl) {
        this.dinamicreturnsuccessurl = dinamicreturnsuccessurl;
    }

    @Column(name = "DINAMICRETURNERRORURL")
    public String getDinamicreturnerrorurl() {
        return this.dinamicreturnerrorurl;
    }

    public void setDinamicreturnerrorurl(String dinamicreturnerrorurl) {
        this.dinamicreturnerrorurl = dinamicreturnerrorurl;
    }

    @Column(name = "ISCARDDETAILSONMERCHANTLEVEL", length = 20)
    public String getIscarddetailsonmerchantlevel() {
        return this.iscarddetailsonmerchantlevel;
    }

    public void setIscarddetailsonmerchantlevel(String iscarddetailsonmerchantlevel) {
        this.iscarddetailsonmerchantlevel = iscarddetailsonmerchantlevel;
    }

    @OneToMany(  fetch = FetchType.LAZY, mappedBy = "ipgmerchant")
    public Set<Ipgmerchnatterminal> getIpgmerchnatterminals() {
        return this.ipgmerchnatterminals;
    }

    public void setIpgmerchnatterminals(Set<Ipgmerchnatterminal> ipgmerchnatterminals) {
        this.ipgmerchnatterminals = ipgmerchnatterminals;
    }

    @OneToMany(  fetch = FetchType.LAZY, mappedBy = "ipgmerchant")
    public Set<Ipgmerchantservicecharge> getIpgmerchantservicecharges() {
        return this.ipgmerchantservicecharges;
    }

    public void setIpgmerchantservicecharges(Set<Ipgmerchantservicecharge> ipgmerchantservicecharges) {
        this.ipgmerchantservicecharges = ipgmerchantservicecharges;
    }

    @OneToMany(  fetch = FetchType.LAZY, mappedBy = "ipgmerchant")
    public Set<Ipgmerchantcredential> getIpgmerchantcredentials() {
        return this.ipgmerchantcredentials;
    }

    public void setIpgmerchantcredentials(Set<Ipgmerchantcredential> ipgmerchantcredentials) {
        this.ipgmerchantcredentials = ipgmerchantcredentials;
    }

    @OneToMany(  fetch = FetchType.LAZY, mappedBy = "ipgmerchant")
    public Set<Ipgmerchantcurrency> getIpgmerchantcurrencies() {
        return this.ipgmerchantcurrencies;
    }

    public void setIpgmerchantcurrencies(Set<Ipgmerchantcurrency> ipgmerchantcurrencies) {
        this.ipgmerchantcurrencies = ipgmerchantcurrencies;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COUNTRYCODE")
    public Ipgcountry getIpgcountry() {
        return this.ipgcountry;
    }

    public void setIpgcountry(Ipgcountry ipgcountry) {
        this.ipgcountry = ipgcountry;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "AUTHENTICATIONREQUIED")
    public Ipgstatus getIpgstatusByAuthenticationrequied() {
        return this.ipgstatusByAuthenticationrequied;
    }

    public void setIpgstatusByAuthenticationrequied(Ipgstatus ipgstatusByAuthenticationrequied) {
        this.ipgstatusByAuthenticationrequied = ipgstatusByAuthenticationrequied;
    }

    @OneToMany(  fetch = FetchType.LAZY, mappedBy = "ipgmerchant")
    public Set<Ipgmerchantaddon> getIpgmerchantaddons() {
        return this.ipgmerchantaddons;
    }

    public void setIpgmerchantaddons(Set<Ipgmerchantaddon> ipgmerchantaddons) {
        this.ipgmerchantaddons = ipgmerchantaddons;
    }

    @OneToMany(  fetch = FetchType.LAZY, mappedBy = "ipgmerchant")
    public Set<Epictxnrequests> getEpictxnrequestses() {
        return this.epictxnrequestses;
    }

    public void setEpictxnrequestses(Set<Epictxnrequests> epictxnrequestses) {
        this.epictxnrequestses = epictxnrequestses;
    }

    @OneToMany(  fetch = FetchType.LAZY, mappedBy = "ipgmerchant")
    public Set<Ipgtransaction> getIpgtransactions() {
        return this.ipgtransactions;
    }

    public void setIpgtransactions(Set<Ipgtransaction> ipgtransactions) {
        this.ipgtransactions = ipgtransactions;
    }
    
    @Column(name="ISDEFAULTMERCHANY", length=3)
    public String getIsdefaultmerchany() {
        return this.isdefaultmerchany;
    }
    
    public void setIsdefaultmerchany(String isdefaultmerchany) {
        this.isdefaultmerchany = isdefaultmerchany;
    }
}
