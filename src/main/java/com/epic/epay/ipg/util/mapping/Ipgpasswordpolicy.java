package com.epic.epay.ipg.util.mapping;
// Generated Oct 24, 2013 11:34:32 AM by Hibernate Tools 3.2.1.GA

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Ipgpasswordpolicy generated by hbm2java
 */
@Entity
@Table(name = "IPGPASSWORDPOLICY", uniqueConstraints =
@UniqueConstraint(columnNames = {"STATUSCODE", "IPGPASSWORDPOLICYID"}))
public class Ipgpasswordpolicy implements java.io.Serializable {

    private BigDecimal ipgpasswordpolicyid;
    private Ipgstatus ipgstatus;
    private BigDecimal minimumlength;
    private BigDecimal maximumlength;
    private BigDecimal allowedspecialcharacters;
    private BigDecimal minimumspecialcharacters;
    private BigDecimal minimumuppercasecharacters;
    private BigDecimal minimumnumericalcharacters;
    private BigDecimal minimumlowercasecharacters;
    private Integer noofpincount;
    private String field1;
    private String field2;
    private String field3;
    private String field4;
    private String field5;
    private String lastupdateduser;
    private Date lastupdatedtime;
    private Date createdtime;

    public Ipgpasswordpolicy() {
    }

    public Ipgpasswordpolicy(BigDecimal ipgpasswordpolicyid) {
        this.ipgpasswordpolicyid = ipgpasswordpolicyid;
    }

    public Ipgpasswordpolicy(BigDecimal ipgpasswordpolicyid, Ipgstatus ipgstatus, BigDecimal minimumlength, BigDecimal maximumlength, BigDecimal allowedspecialcharacters, BigDecimal minimumspecialcharacters, BigDecimal minimumuppercasecharacters, BigDecimal minimumnumericalcharacters, BigDecimal minimumlowercasecharacters, String field1, String field2, String field3, String field4, String field5, String lastupdateduser, Date lastupdatedtime, Date createdtime, Integer noofpincount) {
        this.ipgpasswordpolicyid = ipgpasswordpolicyid;
        this.ipgstatus = ipgstatus;
        this.minimumlength = minimumlength;
        this.maximumlength = maximumlength;
        this.allowedspecialcharacters = allowedspecialcharacters;
        this.minimumspecialcharacters = minimumspecialcharacters;
        this.minimumuppercasecharacters = minimumuppercasecharacters;
        this.minimumnumericalcharacters = minimumnumericalcharacters;
        this.minimumlowercasecharacters = minimumlowercasecharacters;
        this.noofpincount = noofpincount;
        this.field1 = field1;
        this.field2 = field2;
        this.field3 = field3;
        this.field4 = field4;
        this.field5 = field5;
        this.lastupdateduser = lastupdateduser;
        this.lastupdatedtime = lastupdatedtime;
        this.createdtime = createdtime;
    }

    @Id
    @Column(name = "IPGPASSWORDPOLICYID", unique = true, nullable = false, precision = 22, scale = 0)
    public BigDecimal getIpgpasswordpolicyid() {
        return this.ipgpasswordpolicyid;
    }

    public void setIpgpasswordpolicyid(BigDecimal ipgpasswordpolicyid) {
        this.ipgpasswordpolicyid = ipgpasswordpolicyid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "STATUSCODE")
    public Ipgstatus getIpgstatus() {
        return this.ipgstatus;
    }

    public void setIpgstatus(Ipgstatus ipgstatus) {
        this.ipgstatus = ipgstatus;
    }

    @Column(name = "MINIMUMLENGTH", precision = 22, scale = 0)
    public BigDecimal getMinimumlength() {
        return this.minimumlength;
    }

    public void setMinimumlength(BigDecimal minimumlength) {
        this.minimumlength = minimumlength;
    }

    @Column(name = "MAXIMUMLENGTH", precision = 22, scale = 0)
    public BigDecimal getMaximumlength() {
        return this.maximumlength;
    }

    public void setMaximumlength(BigDecimal maximumlength) {
        this.maximumlength = maximumlength;
    }

    @Column(name = "ALLOWEDSPECIALCHARACTERS", precision = 22, scale = 0)
    public BigDecimal getAllowedspecialcharacters() {
        return this.allowedspecialcharacters;
    }

    public void setAllowedspecialcharacters(BigDecimal allowedspecialcharacters) {
        this.allowedspecialcharacters = allowedspecialcharacters;
    }

    @Column(name = "MINIMUMSPECIALCHARACTERS", precision = 22, scale = 0)
    public BigDecimal getMinimumspecialcharacters() {
        return this.minimumspecialcharacters;
    }

    public void setMinimumspecialcharacters(BigDecimal minimumspecialcharacters) {
        this.minimumspecialcharacters = minimumspecialcharacters;
    }

    @Column(name = "MINIMUMUPPERCASECHARACTERS", precision = 22, scale = 0)
    public BigDecimal getMinimumuppercasecharacters() {
        return this.minimumuppercasecharacters;
    }

    public void setMinimumuppercasecharacters(BigDecimal minimumuppercasecharacters) {
        this.minimumuppercasecharacters = minimumuppercasecharacters;
    }

    @Column(name = "MINIMUMNUMERICALCHARACTERS", precision = 22, scale = 0)
    public BigDecimal getMinimumnumericalcharacters() {
        return this.minimumnumericalcharacters;
    }

    public void setMinimumnumericalcharacters(BigDecimal minimumnumericalcharacters) {
        this.minimumnumericalcharacters = minimumnumericalcharacters;
    }

    @Column(name = "MINIMUMLOWERCASECHARACTERS", precision = 22, scale = 0)
    public BigDecimal getMinimumlowercasecharacters() {
        return this.minimumlowercasecharacters;
    }

    public void setMinimumlowercasecharacters(BigDecimal minimumlowercasecharacters) {
        this.minimumlowercasecharacters = minimumlowercasecharacters;
    }

    @Column(name = "NOOFPINCOUNT")
        public Integer getNoofpincount() {
        return noofpincount;
    }

    public void setNoofpincount(Integer noofpincount) {
        this.noofpincount = noofpincount;
    }    

    @Column(name = "FIELD1")
    public String getField1() {
        return this.field1;
    }

    public void setField1(String field1) {
        this.field1 = field1;
    }

    @Column(name = "FIELD2")
    public String getField2() {
        return this.field2;
    }

    public void setField2(String field2) {
        this.field2 = field2;
    }

    @Column(name = "FIELD3")
    public String getField3() {
        return this.field3;
    }

    public void setField3(String field3) {
        this.field3 = field3;
    }

    @Column(name = "FIELD4")
    public String getField4() {
        return this.field4;
    }

    public void setField4(String field4) {
        this.field4 = field4;
    }

    @Column(name = "FIELD5")
    public String getField5() {
        return this.field5;
    }

    public void setField5(String field5) {
        this.field5 = field5;
    }

    @Column(name = "LASTUPDATEDUSER", length = 64)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }

    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "LASTUPDATEDTIME", length = 7)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }

    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATEDTIME", length = 7)
    public Date getCreatedtime() {
        return this.createdtime;
    }

    public void setCreatedtime(Date createdtime) {
        this.createdtime = createdtime;
    }
}
